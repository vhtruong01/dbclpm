package com.example.dbclpm;

import java.util.ArrayList;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.DiemThanhPhanDAO;
import com.example.dbclpm.dao.SinhVienDAO;
import com.example.dbclpm.dao.SinhVien_MonHocDAO;
import com.example.dbclpm.model.SinhVien_MonHoc;

public class TestSinhVien_MonHocDAO {
	private SinhVien_MonHocDAO sinhVien_MonHocDAO = new SinhVien_MonHocDAO();
	
	public TestSinhVien_MonHocDAO() {
		super();
		SinhVienDAO.khoiTao();
	}
	@Test
	public void layDsSinhVien_MonHoc_testChuan1() {
		// sinh vien da hoc dung 1 mon hoc
		int idSinhVien = 2;
		int soLuong = 1;
		int idSinhVien_MocHoc = 45;
		ArrayList<SinhVien_MonHoc> dsSinhVien_MocHoc = sinhVien_MonHocDAO.layDsSinhVien_MonHoc(idSinhVien);
		Assertions.assertNotNull(dsSinhVien_MocHoc);
		Assertions.assertEquals(soLuong, dsSinhVien_MocHoc.size());
		Assertions.assertEquals(idSinhVien_MocHoc, dsSinhVien_MocHoc.get(0).getId());
	}
	@Test
	public void layDsSinhVien_MonHoc_testChuan2() {
		// sinh vien da hoc > 1 mon hoc
		int idSinhVien = 1;
		int soLuong = 44;
		int idSinhVien_MocHoc = 1;
		ArrayList<SinhVien_MonHoc> dsSinhVien_MocHoc = sinhVien_MonHocDAO.layDsSinhVien_MonHoc(idSinhVien);
		Assertions.assertNotNull(dsSinhVien_MocHoc);
		Assertions.assertEquals(soLuong, dsSinhVien_MocHoc.size());
		for(SinhVien_MonHoc sinhVien_MonHoc : dsSinhVien_MocHoc) {
			Assertions.assertEquals(idSinhVien_MocHoc, sinhVien_MonHoc.getId());
			idSinhVien_MocHoc++;
		}
	}
	@Test
	public void layDsSinhVien_MonHoc_testChuan3() {
		// sinh vien chua hoc mon hoc nao
		int idSinhVien = 3;
		int soLuong = 0;
		ArrayList<SinhVien_MonHoc> dsSinhVien_MocHoc = sinhVien_MonHocDAO.layDsSinhVien_MonHoc(idSinhVien);
		Assertions.assertNotNull(dsSinhVien_MocHoc);
		Assertions.assertEquals(soLuong, dsSinhVien_MocHoc.size());
	}
	@Test
	public void layDsSinhVien_MonHoc_testNgoaiLe1() {
		// sinh vien khong ton tai
		int idSinhVien = 4;
		ArrayList<SinhVien_MonHoc> dsSinhVien_MocHoc = sinhVien_MonHocDAO.layDsSinhVien_MonHoc(idSinhVien);
		Assertions.assertNull(dsSinhVien_MocHoc);
	}
}

////////////////////////////////////////////////////////////////////////////

package com.example.dbclpm;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.MonHocDAO;
import com.example.dbclpm.dao.SinhVienDAO;
import com.example.dbclpm.model.MonHoc;

public class TestMonHocDAO {
	private MonHocDAO monHocDAO = new MonHocDAO();
	
	public TestMonHocDAO() {
		super();
		SinhVienDAO.khoiTao();
	}

	@Test
	public void layMonHoc_testChuan1() {
		// mon hoc co tinh GPA da ton tai
		int idMonHoc = 2;
		MonHoc monHoc = monHocDAO.layMonHoc(idMonHoc);
		Assertions.assertNotNull(monHoc);
		Assertions.assertEquals(idMonHoc, monHoc.getId());
		Assertions.assertTrue(monHoc.isTinhGPA());
	}
	@Test
	public void layMonHoc_testChuan2() {
		// mon hoc khong tinh GPA da ton tai
		int idMonHoc = 1;
		MonHoc monHoc = monHocDAO.layMonHoc(idMonHoc);
		Assertions.assertNotNull(monHoc);
		Assertions.assertEquals(idMonHoc, monHoc.getId());
		Assertions.assertFalse(monHoc.isTinhGPA());
	}
	@Test
	public void layMonHoc_testNgoaiLe1() {
		// mon hoc khong ton tai
		int idMonHoc = 0;
		MonHoc monHoc = monHocDAO.layMonHoc(idMonHoc);
		Assertions.assertNull(monHoc);
	}
}


////////////////////////////////////////////////////////////////////


package com.example.dbclpm;

import static org.mockito.ArgumentMatchers.intThat;

import java.util.ArrayList;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.MonHoc_DiemThanhPhanDAO;
import com.example.dbclpm.dao.SinhVienDAO;
import com.example.dbclpm.model.MonHoc_DiemThanhPhan;

public class TestMonHoc_DiemThanhPhanDAO {
	private MonHoc_DiemThanhPhanDAO monHoc_DiemThanhPhanDAO = new MonHoc_DiemThanhPhanDAO();

	public TestMonHoc_DiemThanhPhanDAO() {
		super();
		SinhVienDAO.khoiTao();
	}
	
	@Test
	public void layDsMonHoc_DiemThanhPhan_testChuan1() {
		int idMonHoc = 1;
		int soLuongDauDiem = 3;
		int idMonHoc_DiemThanhPhan = 1;
		ArrayList<MonHoc_DiemThanhPhan> dsMonHoc_DiemThanhPhan = monHoc_DiemThanhPhanDAO.layDsMonHoc_DiemThanhPhan(idMonHoc);
		Assertions.assertNotNull(dsMonHoc_DiemThanhPhan);
		Assertions.assertEquals(soLuongDauDiem, dsMonHoc_DiemThanhPhan.size());;
		for(MonHoc_DiemThanhPhan monHoc_DiemThanhPhan : dsMonHoc_DiemThanhPhan) {
			Assertions.assertEquals(idMonHoc_DiemThanhPhan, monHoc_DiemThanhPhan.getId());
			idMonHoc_DiemThanhPhan++;
		}
	}
	@Test
	public void layDsMonHoc_DiemThanhPhan_testNgoaiLe1() {
		int idMonHoc = 0;
		ArrayList<MonHoc_DiemThanhPhan> dsMonHoc_DiemThanhPhan = monHoc_DiemThanhPhanDAO.layDsMonHoc_DiemThanhPhan(idMonHoc);
		Assertions.assertNull(dsMonHoc_DiemThanhPhan);
	}
}



//////////////////////////////////////////////////////////////////////////////////

package com.example.dbclpm;

import java.util.ArrayList;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.HocKyDAO;
import com.example.dbclpm.model.HocKy;

public class TestHocKyDAO {
	private HocKyDAO hocKyDAO = new HocKyDAO();
	@Test
	public void layDsHocKy_testChuan1() {
		//lay du lieu hoc ky trong co so du lieu
		int soLuongHocKy = 8;
		ArrayList<HocKy> dsHocKy = hocKyDAO.layDsHocKy();
		Assertions.assertNotNull(dsHocKy);
		Assertions.assertEquals(soLuongHocKy, dsHocKy.size());
		int idHocKy = 1;
		for(HocKy hocKy : dsHocKy) {
			Assertions.assertEquals(idHocKy, hocKy.getId());
			idHocKy++;
		}
	}
}

////////////////////////////////////

package com.example.dbclpm;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.SinhVienDAO;
import com.example.dbclpm.model.SinhVien;

public class TestSinhVienDAO {
	private SinhVienDAO sinhVienDAO = new SinhVienDAO();
	@Test
	public void kiemTraDangNhap_testChuan1() {
		// sinh vien dang nhap dung tai khoan va mat khau
		int id = 1;
		String taiKhoan = "bien";
		String matKhau = "bien";
		SinhVien sinhVien = new SinhVien();
		sinhVien.setTaiKhoan(taiKhoan);
		sinhVien.setMatKhau(matKhau);
		boolean result = sinhVienDAO.kiemTraDangNhap(sinhVien);
		Assertions.assertTrue(result);
		Assertions.assertEquals(id, sinhVien.getId());
	}
	@Test
	public void kiemTraDangNhap_testNgoaiLe1() {
		// sinh vien dang nhap dung tai khoan, sai mat khau
		String taiKhoan = "bien";
		String matKhau = "matKhauSai";
		SinhVien sinhVien = new SinhVien();
		sinhVien.setTaiKhoan(taiKhoan);
		sinhVien.setMatKhau(matKhau);
		boolean result = sinhVienDAO.kiemTraDangNhap(sinhVien);
		Assertions.assertFalse(result);
	}
	@Test
	public void kiemTraDangNhap_testNgoaiLe2() {
		// sinh vien dang nhap tai khoan khong ton tai
		String taiKhoan = "taiKhoanKhongTonTai";
		String matKhau = "bien";
		SinhVien sinhVien = new SinhVien();
		sinhVien.setTaiKhoan(taiKhoan);
		sinhVien.setMatKhau(matKhau);
		boolean result = sinhVienDAO.kiemTraDangNhap(sinhVien);
		Assertions.assertFalse(result);
	}
}

////////////////////////


package com.example.dbclpm;

import java.util.ArrayList;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import com.example.dbclpm.dao.DiemThanhPhanDAO;
import com.example.dbclpm.dao.HocKyDAO;
import com.example.dbclpm.model.DiemThanhPhan;
import com.example.dbclpm.model.HocKy;

public class TestDiemThanhPhanDAO {
	private DiemThanhPhanDAO diemThanhPhanDAO = new DiemThanhPhanDAO();
	@Test
	public void layDsDiemThanhPhan_testChuan1() {
		//lay du lieu diem thanh phan trong co so du lieu
		int soLuongDiemThanhPhan = 16;
		ArrayList<DiemThanhPhan> dsDiemThanhPhan = diemThanhPhanDAO.layDsDiemThanhPhan();
		Assertions.assertNotNull(dsDiemThanhPhan);
		Assertions.assertEquals(soLuongDiemThanhPhan, dsDiemThanhPhan.size());
		int idDiemThanhPhan = 1;
		for(DiemThanhPhan diemThanhPhan : dsDiemThanhPhan) {
			Assertions.assertEquals(idDiemThanhPhan, diemThanhPhan.getId());
			idDiemThanhPhan++;
		}
	}
}
